import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER3
import "blueprint.blueprint" for Blueprint
import "rendergraph.variant" for VAR_TYPE_VERTEX_ARRAY
import "omgraph.variant" for VAR_TYPE_TOPO_SHAPE
import "om" for BRepTools
import "maths.vector" for Vector3

class ShapeToVao is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "shape", VAR_TYPE_TOPO_SHAPE),
			Pin(this, "color", VAR_TYPE_NUMBER3),
		]
		this.exports = [
			Pin(this, "vao", VAR_TYPE_VERTEX_ARRAY),
		]

		this.layout()
	}

	calc_value(idx)
	{
		var v_shape = Blueprint.calc_input_value(this, 0)
		if (!v_shape) {
			return nil
		}

		var color = Vector3(1, 1, 1)
		var v_color = Blueprint.calc_input_value(this, 1)
		if (v_color) {
			color = v_color.value
		}

		var vao = BRepTools.shape2vao(v_shape.value, color)
		return Variant(VAR_TYPE_VERTEX_ARRAY, vao)
	}	
}