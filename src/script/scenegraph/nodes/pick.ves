import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_ARRAY, VAR_TYPE_NODE
import "blueprint.blueprint" for Blueprint
import "blueprint.blackboard" for BLACKBOARD
import "blueprint.dirty_types" for DIRTY_EDITOR
import "blueprint.node_param" for NodeParam
import "scenegraph.variant" for VAR_TYPE_SCENE_TREE
import "geograph.brush" for Brush
import "geograph.variant" for VAR_TYPE_GEO, VarGeo
import "maths.vector" for Vector2
import "graphics" for Graphics
import "geometry" for PolytopeMaths

class Pick is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "geo", [ VAR_TYPE_GEO, VAR_TYPE_ARRAY ]),
			Pin(this, "cam", VAR_TYPE_NODE),
		]
		this.exports = [
			Pin(this, "selected", VAR_TYPE_ARRAY),
		]

		this.params.add(NodeParam("type", "poly", { "combo" : [ "poly", "face", "edge" ] }))

		this.layout()

		this.sel_list = []
	}

	calc_value(idx)
	{
		if (idx == 0) 
		{
			return Variant(this.sel_list)
		} 
		else 
		{
			return nil		
		}
	}

	on_mouse_pressed(x, y, btn) 
	{
		Blueprint.send_pin_dirty_root(this.exports[0], DIRTY_EDITOR)

		this.sel_list.clear()

		var v_geo = Blueprint.calc_input_value(this, 0)
		var v_cam = Blueprint.calc_input_value(this, 1)
		if (!v_geo or !v_cam) {
			return
		}

		var screen_pos = Vector2(x, y)
		screen_pos.x = screen_pos.x - Graphics.get_width() * 0.5
		screen_pos.y = Graphics.get_height() * 0.5 - screen_pos.y

		var cam = v_cam.value.cam
		var dir = cam.screen2dir(screen_pos)
		var pos = cam.position

		var polys = []
		for (var geo in v_geo.value)
		{
			var brush = geo.value.shape
			for (var poly in brush.polys)
			{
				polys.add(poly)
			}
		}

		var selected = nil

		var type = this.query_param("type").value
		if (type == "poly")
			selected = PolytopeMaths.pick_poly(polys, pos, dir)
		else if (type == "face")
			selected = PolytopeMaths.pick_face(polys, pos, dir)
		else if (type == "edge")
			selected = PolytopeMaths.pick_edge(polys, pos, dir)

		if (selected)
		{
			var geo = VarGeo()
			geo.shape = Brush([ selected ])
			this.sel_list.add(Variant(VAR_TYPE_GEO, geo))
		}
	}
}