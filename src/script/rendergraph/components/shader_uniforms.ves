import "blueprint.pin" for Pin
import "blueprint.node_helper" for NodeHelper
import "blueprint.node_layout" for DEFAULT_HEIGHT
import "rendergraph.variant" for VAR_TYPE_STORAGE_BUFFER
import "maths" for Matrix44
import "render" for Render
import "gui" for GUI

var FOLD_ARRAY = true

class ShaderUniforms
{
	static init_shader_uniforms(unif)
	{
		if (unif["type"] == "array" or unif["type"] == "struct")
		{
			for (var u in unif["value"]) {
				ShaderUniforms.init_shader_uniforms(u)
			}		
		}
		else
		{
			if (unif["type"] == "mat4") {
				unif["value"] = [ Matrix44.init() ]
			} else if (unif["type"] == "sampler") {
				unif["value"] = [ nil, nil ]
			}
		}
	}

	static get_shader_uniforms(stage, code, lang, inc_dir, uniforms, entry_point)
	{
		var unifs = Render.get_shader_uniforms(stage, code, lang, inc_dir, entry_point)

		// init
		for (var unif in unifs) {
			ShaderUniforms.init_shader_uniforms(unif)
		}

		for (var unif in unifs) {
			uniforms.add(unif)
		}		
	}

	static type_var_to_pin(type)
	{
		if (type == "ssbo") {
			return VAR_TYPE_STORAGE_BUFFER
		} else {
			return NodeHelper.type_var_to_pin(type)
		}
	}

	static add_uniform_to_imports(node, unif)
	{
		if ((!FOLD_ARRAY and unif["type"] == "array") or unif["type"] == "struct") {
			for (var u in unif["value"]) {
				ShaderUniforms.add_uniform_to_imports(node, u)
			}
		} else {
			var pin_type = this.type_var_to_pin(unif["type"])
			var pin = Pin(node, unif["name"], pin_type)
			pin.unif = unif
			node.imports.add(pin)
		}
	}

	static layout(node, unif)
	{
		if ((!FOLD_ARRAY and unif["type"] == "array") or unif["type"] == "struct")
		{
			for (var u in unif["value"]) {
				ShaderUniforms.layout(node, u)
			}
		}
		else
		{
			if (unif["type"] == "float" or unif["type"] == "int" or unif["type"] == "bool") {
				node.style.height = node.style.height + DEFAULT_HEIGHT + DEFAULT_HEIGHT
			} else if (unif["type"] == "float2" or unif["type"] == "int2") {
				node.style.height = node.style.height + DEFAULT_HEIGHT + DEFAULT_HEIGHT * 2
			} else if (unif["type"] == "float3" or unif["type"] == "int3") {
				node.style.height = node.style.height + DEFAULT_HEIGHT + DEFAULT_HEIGHT * 3
			} else if (unif["type"] == "float4" or unif["type"] == "int4") {
				node.style.height = node.style.height + DEFAULT_HEIGHT + DEFAULT_HEIGHT * 4
			}
		}
	}

	static draw_gui(node, ctx, unif, x, y)
	{
		var dirty = false

		if (unif["type"] == "array" or unif["type"] == "struct")
		{
			var skip = unif["type"] == "array" and FOLD_ARRAY
			if (!skip) 
			{
				for (var u in unif["value"]) {
					var y_d = this.draw_gui(node, ctx, u, x, y)
					y = y_d[0]
					if (y_d[1]) {
						dirty = true
					}
				}
			}
		}
		else
		{			
			if (unif["type"] != "sampler" and unif["type"] != "image" and unif["type"] != "mat2" and unif["type"] != "mat3" and unif["type"] != "mat4") {
		    	GUI.label(ctx, unif["name"], x, y)
				y = y - DEFAULT_HEIGHT
			}

			var region = 1.0
			if (unif["type"] == "int" or unif["type"] == "int2" or unif["type"] == "int3" or unif["type"] == "int4") {
				region = 10
			}

			if (unif["type"] == "bool")
			{
				var unif_dirty = false

				var value = GUI.checkbox(ctx, "b", unif["value"][0], x, y)
				if (value != unif["value"][0]) {
					unif["value"][0] = value
					unif_dirty = true
				}

			    if (unif_dirty) {
			    	node.shader.prog.set_uniform_value(unif)
			    	dirty = true
			    }
			}
			else if (unif["type"] == "float" or unif["type"] == "int")
			{
				var unif_dirty = false

			    var r = GUI.slider(ctx, "x", unif["value"][0], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (r != unif["value"][0]) {
			    	unif["value"][0] = r
			    	unif_dirty = true
			    }

			    if (unif_dirty) {
			    	node.shader.prog.set_uniform_value(unif)
			    	dirty = true
			    }
			}
			else if (unif["type"] == "float2" or unif["type"] == "int2")
			{
				var unif_dirty = false

			    var r = GUI.slider(ctx, "x", unif["value"][0], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (r != unif["value"][0]) {
			    	unif["value"][0] = r
			    	unif_dirty = true
			    }

			    var g = GUI.slider(ctx, "y", unif["value"][1], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (g != unif["value"][1]) {
			    	unif["value"][1] = g
			    	unif_dirty = true
			    }

			    if (unif_dirty) {
			    	node.shader.prog.set_uniform_value(unif)
			    	dirty = true
			    }
			}
			else if (unif["type"] == "float3" or unif["type"] == "int3")
			{
				var unif_dirty = false

			    var r = GUI.slider(ctx, "x", unif["value"][0], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (r != unif["value"][0]) {
			    	unif["value"][0] = r
			    	unif_dirty = true
			    }

			    var g = GUI.slider(ctx, "y", unif["value"][1], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (g != unif["value"][1]) {
			    	unif["value"][1] = g
			    	unif_dirty = true
			    }

			    var b = GUI.slider(ctx, "z", unif["value"][2], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (b != unif["value"][2]) {
			    	unif["value"][2] = b
			    	unif_dirty = true
			    }

			    if (unif_dirty) {
			    	node.shader.prog.set_uniform_value(unif)
			    	dirty = true
			    }
			}
			else if (unif["type"] == "float4" or unif["type"] == "int4")
			{
				var unif_dirty = false

			    var r = GUI.slider(ctx, "x", unif["value"][0], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (r != unif["value"][0]) {
			    	unif["value"][0] = r
			    	unif_dirty = true
			    }

			    var g = GUI.slider(ctx, "y", unif["value"][1], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (g != unif["value"][1]) {
			    	unif["value"][1] = g
			    	unif_dirty = true
			    }

			    var b = GUI.slider(ctx, "z", unif["value"][2], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (b != unif["value"][2]) {
			    	unif["value"][2] = b
			    	unif_dirty = true
			    }

			    var a = GUI.slider(ctx, "w", unif["value"][3], x, y, node.style.width - 20, region, false)
				y = y - DEFAULT_HEIGHT
			    if (a != unif["value"][3]) {
			    	unif["value"][3] = a
			    	unif_dirty = true
			    }

			    if (unif_dirty) {
			    	node.shader.prog.set_uniform_value(unif)
			    	dirty = true
			    }
			}
		}

		return [y, dirty]
	}	
}