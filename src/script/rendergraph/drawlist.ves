import "blueprint.blueprint" for Blueprint
import "rendergraph.nodes.draw" for Draw

class Drawlist
{
	init(nodes)
	{
		this.lists = []

		this.build_lists(nodes)
	}

	build_lists(nodes)
	{
		// query end port and build
		for (var node in nodes)
		{
			if (Blueprint.is_out_ports_empty(node)) {
				var prev_nodes = Blueprint.get_precursor_nodes(node)
				this.build_list(prev_nodes)
			}
		}

		// build all if prev fail
		if (this.lists.isEmpty) {
			this.build_list(nodes)
		}
	}

	build_list(nodes)
	{
		var sorted = Blueprint.topo_sort(nodes)

		for (var node in sorted) {
			if (node.has_method("render_gen()")) {
				node.render_gen()
			}
		}

		var list = []
		for (var node in sorted) {
			if (node.has_method("render_run()")) {
				list.add(node)
			}
		}
		if (!list.isEmpty) {
			this.lists.add(list)
		}
	}

	run()
	{
		for (var list in this.lists) 
		{
			for (var node in list) {
				if (node.has_method("render_run()")) {
					node.render_run()
					node.render_times = node.render_times + 1
				}
			}
		}
	}
}