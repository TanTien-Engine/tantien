import "blueprint.blueprint" for Blueprint
import "blueprint.nodes.subgraph" for Subgraph
import "editorgraph.nodes.trigger" for Trigger
import "editorgraph.event_types" for EVENT_INIT

class TriggerList
{
	init(nodes)
	{
		this.triggers = {}

		this.events = {}

		this.build_from_multi(nodes)

		this.run(EVENT_INIT)		
	}

	run(event)
	{
		var triggers = this.triggers[event]
		if (triggers) {
			for (var node in triggers) {
				node.trigger_run()
			}
		}
	}

	run(event, params)
	{
		var events = this.events[event]
		if (events) {
			for (var node in events) {
				node.set_event_params(params)
			}
		}

		this.run(event)
	}

	build_from_multi(nodes)
	{
		var sorted = Blueprint.topo_sort(nodes)
		for (var node in sorted) {
			this.build_from_one(node)
		}
	}

	build_from_one(node)
	{
		if (node is Trigger)
		{
			var key = node.get_event()
			if (key) {
				this.add_to_map_list(this.triggers, key, node)
			}
		}
		else if (node is Subgraph) 
		{
			var nodes = []
			for (var item in node.all_items) {
				nodes.add(item[0])
			}
			this.build_from_multi(nodes)
		}
		else if (node.has_method("set_event_params(_)")) 
		{
			var v_event = Blueprint.calc_output_value(node, 0)
			if (v_event) {
				this.add_to_map_list(this.events, v_event.value, node)
			}
		}
	}

	add_to_map_list(map, key, val)
	{
		var list = map[key]
		if (list) {
			list.add(val)
		} else {
			map[key] = [val]
		}
	}
}