import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER
import "math" for Math

class Pi is Node
{
	init()
	{
		super.init()

		this.exports = [
			Pin(this, "pi/8", VAR_TYPE_NUMBER),		
			Pin(this, "pi/6", VAR_TYPE_NUMBER),
			Pin(this, "pi/4", VAR_TYPE_NUMBER),
			Pin(this, "pi/3", VAR_TYPE_NUMBER),
			Pin(this, "pi/2", VAR_TYPE_NUMBER),
			Pin(this, "pi",   VAR_TYPE_NUMBER),
			Pin(this, "pi*2", VAR_TYPE_NUMBER),
		]

		this.layout()
	}

	calc_value(idx)
	{
		if (idx == 0) {
			return Variant(VAR_TYPE_NUMBER, Math.pi() / 8)
		} else if (idx == 1) {
			return Variant(VAR_TYPE_NUMBER, Math.pi() / 6)
		} else if (idx == 2) {
			return Variant(VAR_TYPE_NUMBER, Math.pi() / 4)
		} else if (idx == 3) {
			return Variant(VAR_TYPE_NUMBER, Math.pi() / 3)
		} else if (idx == 4) {
			return Variant(VAR_TYPE_NUMBER, Math.pi() / 2)
		} else if (idx == 5) {
			return Variant(VAR_TYPE_NUMBER, Math.pi())
		} else if (idx == 6) {
			return Variant(VAR_TYPE_NUMBER, Math.pi() * 2)
		}

		return nil
	}
}