import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for VAR_TYPE_ANY, VAR_TYPE_PORT
import "blueprint.node_layout" for DEFAULT_HEIGHT

class Print is Node
{
	init() 
	{
		super.init()

		this.imports = [
			Pin(this, "prev", VAR_TYPE_PORT),
			Pin(this, "value", VAR_TYPE_ANY)
		]
		this.exports = [
			Pin(this, "next", VAR_TYPE_PORT)
		]

		this.layout()

		this.value = nil
	}

	on_pin_dirty(pin, type, msg)
	{
		this.value = nil
	}

	execute_run() 
	{
		this.value = Blueprint.calc_input_value(this, 1)

		import "logger.logger" for Logger
		Logger.info("Print: %(this.value)")
	}

	draw(mt, cam_mt)
	{
		super.draw(mt, cam_mt)

		var val = this.value
		if (!val) {
			val = Blueprint.calc_input_value(this, 1)
		}
		if (!val) {
			return
		}

		var hh = this.style.height * 0.5
		var y = this.pos.y + this.style.height * 0.5 - this.calc_panel_height() - DEFAULT_HEIGHT * 0.5
		val.print(this.pos.x, y, this.style.width, cam_mt)
	}

	layout() 
	{
		super.layout()

		this.style.height = this.style.height + DEFAULT_HEIGHT
	}	
}