import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.variant" for VAR_TYPE_ANY
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam

class Cache is Node
{
	init() 
	{
		super.init()

		this.imports = [
			Pin(this, "var", VAR_TYPE_ANY),
		]
		this.exports = [
			Pin(this, "var", VAR_TYPE_ANY),
		]

		this.params.add(NodeParam("disable", false))

		this.layout()

		this.val = nil
	}

	on_pin_dirty(pin, type)
	{
		if (pin.is_input) {
			this.clear_cache()
			Blueprint.send_pin_dirty(this.exports[0], type)
		}
	}
	
	calc_value(idx)
	{
		if (!this.val or this.query_param("disable").value) {
			this.val = Blueprint.calc_input_value(this, 0)
		}

		return this.val
	}

	clear_cache()
	{
		this.val = nil
	}
}