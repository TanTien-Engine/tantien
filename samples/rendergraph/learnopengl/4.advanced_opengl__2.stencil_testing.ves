var node0 = ::rendergraph::nodes::clear::Clear()

node0.masks = [ "color", "stencil", "depth" ]
node0.values = { "color" : [ 0.1, 0.1, 0.1, 1 ] }

_editor.add_node(node0, -181.45454545455, 568.59090909091)

var node1 = ::rendergraph::nodes::draw::Draw()

node1.set_prim_type("triangles")
node1.render_state = { "blend" : false, "depth_test" : true, "cull" : "disable", "depth_func" : "less", "clip_plane" : false }
node1.skip = false

_editor.add_node(node1, 56.80518593489, 434.01631470776)

var node2 = ::rendergraph::nodes::shader::Shader()

node2.vs = "
#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;

out vec2 TexCoords;

uniform UBO
{
	mat4 model;
	mat4 view;
	mat4 projection;
};

void main()
{
    TexCoords = aTexCoords;    
    gl_Position = projection * view * model * vec4(aPos, 1.0);
}
"
node2.tcs = ""
node2.tes = ""
node2.gs = ""
node2.fs = "
#version 330 core
out vec4 FragColor;

in vec2 TexCoords;

uniform sampler2D texture1;

void main()
{    
    FragColor = texture(texture1, TexCoords);
}
"
node2.cs = ""
node2.render_gen()

_editor.add_node(node2, -164.03965761902, 389.53503742566)

var node3 = ::blueprint::nodes::camera3d::Camera3d()

node3.cam.position.set(6.1053021275045, 2.7662815450199, 5.4980445795976)
node3.cam.yaw = -136.7
node3.cam.pitch = -27.5
node3.cam.zoom = 45
node3.cam.update_vectors()
node3.speed = 0.17553623020649

_editor.add_node(node3, -618.7772232191, 681.89869496855)

var node4 = ::blueprint::nodes::perspective::Perspective()

node4.fovy = 45
node4.aspect = 0
node4.znear = 0.1
node4.zfar = 100

_editor.add_node(node4, -592.25183128148, 509.99043217132)

var node5 = ::rendergraph::nodes::vertex_array::VertexArray()

node5.data = [ 5, -0.5, 5, 2, 0, -5, -0.5, 5, 0, 0, -5, -0.5, -5, 0, 2, 5, -0.5, 5, 2, 0, -5, -0.5, -5, 0, 2, 5, -0.5, -5, 2, 2 ]
node5.attrs = [ 3, 2 ]

_editor.add_node(node5, 338.98375360713, -425.15630223197)

var node6 = ::rendergraph::nodes::texture::Texture()
node6.query_param("unif_name").value = "u_tex"
node6.gamma_correction = false
node6.init_texture("resources/textures/metal.png")
node6.set_sampler("linear_repeat")

_editor.add_node(node6, -1092.7043569593, 485.30749424769)

var node7 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node7, 494.1508371582, -565.62705920411)

var node8 = ::rendergraph::nodes::primitive_shape::PrimitiveShape()

node8.type = "cube"
node8.layout = [ "position", "texture" ]
node8.shape_params = {  }

_editor.add_node(node8, 337.69312306251, -572.05289419279)

var node9 = ::rendergraph::nodes::texture::Texture()
node9.query_param("unif_name").value = "u_tex"
node9.gamma_correction = false
node9.init_texture("resources/textures/marble.jpg")

_editor.add_node(node9, -1085.137084232, 136.22294879314)

var node10 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node10, -849.4560978516, 244.10019737305)

var node11 = ::blueprint::nodes::matrix::Matrix()

_editor.add_node(node11, -666.60679931641, -92.428125000001)

var node12 = ::blueprint::nodes::translate::Translate()

node12.dx = -1
node12.dy = 0
node12.dz = -1

_editor.add_node(node12, -667.75981933594, -198.05111755371)

var node13 = ::blueprint::nodes::translate::Translate()

node13.dx = 2
node13.dy = 0
node13.dz = 0

_editor.add_node(node13, -662.91981933594, -331.15111755371)

var node14 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node14, -12.53928555575, -363.61182639383)

var node15 = ::rendergraph::nodes::draw::Draw()

node15.set_prim_type("triangles")
node15.render_state = { "blend" : false, "depth_test" : true, "cull" : "disable", "depth_func" : "less", "clip_plane" : false }
node15.skip = false

_editor.add_node(node15, 593.60624153219, 226.95999990686)

var node16 = ::rendergraph::nodes::shader::Shader()

node16.vs = "
#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;

out vec2 TexCoords;

uniform UBO
{
	mat4 model;
	mat4 view;
	mat4 projection;
};

void main()
{
    TexCoords = aTexCoords;    
    gl_Position = projection * view * model * vec4(aPos, 1.0);
}
"
node16.tcs = ""
node16.tes = ""
node16.gs = ""
node16.fs = "
#version 330 core
out vec4 FragColor;

in vec2 TexCoords;

uniform sampler2D texture1;

void main()
{    
    FragColor = texture(texture1, TexCoords);
}
"
node16.cs = ""
node16.render_gen()

_editor.add_node(node16, 375.92443329007, 145.95731015293)

var node17 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node17, 109.5292193278, -226.7390991211)

var node18 = ::rendergraph::nodes::draw::Draw()

node18.set_prim_type("triangles")
node18.render_state = { "rasterization" : "fill", "blend" : false, "depth_test" : false, "cull" : "disable", "depth_func" : "less", "clip_plane" : false }
node18.skip = false

_editor.add_node(node18, 1169.3089643555, -119.91929931641)

var node19 = ::rendergraph::nodes::shader::Shader()

node19.vs = "
#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;

out vec2 TexCoords;

uniform UBO
{
	mat4 model;
	mat4 view;
	mat4 projection;	
};

void main()
{
    TexCoords = aTexCoords;    
    gl_Position = projection * view * model * vec4(aPos, 1.0f);
}
"
node19.tcs = ""
node19.tes = ""
node19.gs = ""
node19.fs = "
#version 330 core
out vec4 FragColor;

void main()
{
    FragColor = vec4(0.04, 0.28, 0.26, 1.0);
}
"
node19.cs = ""
node19.render_gen()

_editor.add_node(node19, 930.47461853884, -80.261328051351)

var node20 = ::rendergraph::nodes::stencil_test::StencilTest()
node20.query_param("face").value = "front_and_back"
node20.query_param("func").value = "always"
node20.query_param("ref").value = 1
node20.query_param("fail_op").value = "keep"
node20.query_param("pass_op").value = "replace"

_editor.add_node(node20, 13.078527832031, 139.49073486328)

var node21 = ::rendergraph::nodes::stencil_test::StencilTest()
node21.query_param("face").value = "front_and_back"
node21.query_param("func").value = "notequal"
node21.query_param("ref").value = 1
node21.query_param("fail_op").value = "keep"
node21.query_param("pass_op").value = "keep"

_editor.add_node(node21, 829.444140625, -271.31757949171)

var node22 = ::blueprint::nodes::scale::Scale()

node22.sx = 1.1
node22.sy = 1.1
node22.sz = 1.1

_editor.add_node(node22, -645.87191385222, -557.04486901251)

var node23 = ::blueprint::nodes::translate::Translate()

node23.dx = -1
node23.dy = 0
node23.dz = -1

_editor.add_node(node23, -460.00509724728, -479.00408975506)

var node24 = ::blueprint::nodes::translate::Translate()

node24.dx = 2
node24.dy = 0
node24.dz = 0

_editor.add_node(node24, -471.27019724728, -612.10408975506)

var node25 = ::blueprint::nodes::merge::Merge()

_editor.add_node(node25, -13.232974511422, -517.63970017294)

Blueprint.connect(node22, "mat", node24, "mat")
Blueprint.connect(node22, "mat", node23, "mat")
Blueprint.connect(node23, "mat", node25, "in1")
Blueprint.connect(node24, "mat", node25, "in2")
Blueprint.connect(node12, "mat", node17, "in0")
Blueprint.connect(node13, "mat", node17, "in1")
Blueprint.connect(node11, "mat", node14, "in0")
Blueprint.connect(node12, "mat", node14, "in1")
Blueprint.connect(node13, "mat", node14, "in2")
Blueprint.connect(node6, "tex", node10, "in0")
Blueprint.connect(node9, "tex", node10, "in1")
Blueprint.connect(node5, "out", node7, "in0")
Blueprint.connect(node8, "out", node7, "in1")
Blueprint.connect(node3, "zoom", node4, "fovy")
Blueprint.connect(node25, "list", node19, "model")
Blueprint.connect(node3, "mat", node19, "view")
Blueprint.connect(node4, "mat", node19, "projection")
Blueprint.connect(node17, "list", node16, "model")
Blueprint.connect(node3, "mat", node16, "view")
Blueprint.connect(node4, "mat", node16, "projection")
Blueprint.connect(node9, "tex", node16, "texture1")
Blueprint.connect(node3, "mat", node2, "view")
Blueprint.connect(node4, "mat", node2, "projection")
Blueprint.connect(node6, "tex", node2, "texture1")
Blueprint.connect(node0, "next", node1, "prev")
Blueprint.connect(node2, "out", node1, "shader")
Blueprint.connect(node5, "out", node1, "va")
Blueprint.connect(node1, "next", node15, "prev")
Blueprint.connect(node16, "out", node15, "shader")
Blueprint.connect(node8, "out", node15, "va")
Blueprint.connect(node20, "rs", node15, "rs")
Blueprint.connect(node15, "next", node18, "prev")
Blueprint.connect(node19, "out", node18, "shader")
Blueprint.connect(node8, "out", node18, "va")
Blueprint.connect(node21, "rs", node18, "rs")
